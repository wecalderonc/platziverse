'use strict';var cov_1tw2dloguv=function(){var path="/home/wecalderonc/code/platziverse/platziverse-db/index.js";var hash="a8582ebf62ef948fc6a63b4a675bd1838b35e052";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/wecalderonc/code/platziverse/platziverse-db/index.js",statementMap:{"0":{start:{line:3,column:22},end:{line:3,column:41}},"1":{start:{line:4,column:24},end:{line:4,column:49}},"2":{start:{line:5,column:25},end:{line:5,column:51}},"3":{start:{line:6,column:17},end:{line:6,column:36}},"4":{start:{line:8,column:0},end:{line:41,column:1}},"5":{start:{line:9,column:2},end:{line:19,column:4}},"6":{start:{line:21,column:20},end:{line:21,column:41}},"7":{start:{line:22,column:21},end:{line:22,column:44}},"8":{start:{line:23,column:22},end:{line:23,column:46}},"9":{start:{line:25,column:2},end:{line:25,column:33}},"10":{start:{line:26,column:2},end:{line:26,column:35}},"11":{start:{line:28,column:2},end:{line:28,column:32}},"12":{start:{line:30,column:2},end:{line:32,column:3}},"13":{start:{line:31,column:4},end:{line:31,column:41}},"14":{start:{line:34,column:16},end:{line:34,column:18}},"15":{start:{line:35,column:17},end:{line:35,column:19}},"16":{start:{line:37,column:2},end:{line:40,column:3}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:17},end:{line:8,column:18}},loc:{start:{line:8,column:41},end:{line:41,column:1}},line:8}},branchMap:{"0":{loc:{start:{line:30,column:2},end:{line:32,column:3}},type:"if",locations:[{start:{line:30,column:2},end:{line:32,column:3}},{start:{line:30,column:2},end:{line:32,column:3}}],line:30}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},f:{"0":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"a8582ebf62ef948fc6a63b4a675bd1838b35e052"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const setupDatabase=(cov_1tw2dloguv.s[0]++,require('./lib/db'));const setupAgentModel=(cov_1tw2dloguv.s[1]++,require('./models/agent'));const setupMetricModel=(cov_1tw2dloguv.s[2]++,require('./models/metric'));const defaults=(cov_1tw2dloguv.s[3]++,require('defaults'));cov_1tw2dloguv.s[4]++;module.exports=async function(config){cov_1tw2dloguv.f[0]++;cov_1tw2dloguv.s[5]++;config=defaults(config,{dialect:'sqlite',pool:{max:10,min:0,idle:10000},query:{raw:true}});const sequelize=(cov_1tw2dloguv.s[6]++,setupDatabase(config));const AgentModel=(cov_1tw2dloguv.s[7]++,setupAgentModel(config));const MetricModel=(cov_1tw2dloguv.s[8]++,setupMetricModel(config));cov_1tw2dloguv.s[9]++;AgentModel.hasMany(MetricModel);cov_1tw2dloguv.s[10]++;MetricModel.belongsTo(AgentModel);cov_1tw2dloguv.s[11]++;await sequelize.authenticate();cov_1tw2dloguv.s[12]++;if(config.setup){cov_1tw2dloguv.b[0][0]++;cov_1tw2dloguv.s[13]++;await sequelize.sync({force:true});}else{cov_1tw2dloguv.b[0][1]++;}const Agent=(cov_1tw2dloguv.s[14]++,{});const Metric=(cov_1tw2dloguv.s[15]++,{});cov_1tw2dloguv.s[16]++;return{Agent,Metric};};